name: maven_docker_ci.yml


on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # Allows manual runs from the GitHub Actions UI
  workflow_dispatch:

jobs:
  build_test_push:
    name: Build, Test, and Push Docker Image
    runs-on: ubuntu-latest

    # *** NO 'services: postgres:' BLOCK IS NEEDED ***

    steps:
      # 1. SETUP AND CHECKOUT
      - name: üîÑ Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven # Cache Maven dependencies for faster builds

      # 2. RUN PURE UNIT TESTS (FAST)
      # Compiles and runs tests, but skips packaging/lifecycle steps after the test phase.
      - name: ‚úÖ Run Pure Unit Tests
        run: mvn -B test --file pom.xml

      # 3. RUN INTEGRATION TESTS (SPRING CONTEXT/H2)
      # Packages the application and runs Spring tests using the 'test' profile (H2).
      - name: ‚öôÔ∏è Run Integration Tests (H2 Context Load)
        run: mvn -B package -Dspring-boot.run.profiles=test --file pom.xml

      # 4. DOCKER BUILD AND PUSH (Continuous Delivery)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
            context: .
            push: ${{ github.ref == 'refs/heads/master' }}
            # ‚úÖ CORRECTED LINE: Ensure the tag format is clean
            tags: ${{ secrets.DOCKER_USERNAME }}/volleyball-stat-tracker:latest