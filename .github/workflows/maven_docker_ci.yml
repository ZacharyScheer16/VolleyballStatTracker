name: maven_docker_ci.yml
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_test_push:
    name: Build, Test, and Push Docker Image
    runs-on: ubuntu-latest

    # ðŸŒŸ FIXED: Replaced '>' with '>-' (folded block with chomp) to remove trailing newline
    services:
      postgres:
        image: postgres:13
        env:
          # CRUCIAL: These credentials MUST match your application.properties for CI
          POSTGRES_DB: volleyball_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Ninjazach7!1
        ports:
          - 5432:5432
        # FIX APPLIED HERE: Use '>-' and recommended flags for clarity
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: ðŸ”„Checkout Code
        uses: actions/checkout@v4

      - name:  Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # ðŸš€ IMPROVED: Robust wait step using netcat (nc) to ensure the port is open
      - name: Wait for PostgreSQL to be reachable
        run: |
          sudo apt-get update && sudo apt-get install -y netcat
          for i in {1..30}; do
            if nc -z localhost 5432; then
              echo "PostgreSQL listening"
              exit 0
            fi
            sleep 1
          done
          echo "Postgres did not come up" >&2
          exit 1
      # 1. BUILD & TEST STEP (Now connects to the 'postgres' service)
      - name: Build and Test JAR
        run: mvn -B package -Dspring-boot.run.profiles=test --file pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name:  Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/volleyball-stat-tracker
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      # 2. DOCKER BUILD & PUSH STEP
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}